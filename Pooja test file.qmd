---
title: "DS4PP Midterm Project"
format: html
editor: visual
---

```{r}
library(tidyverse)
hud_poverty <- read_csv("HUD Low_Poverty_Index.csv")
hud_hcv <- read_csv("HUD Housing_Choice_Vouchers_by_Tract.csv")
evict <- read_csv("Eviction Lab data by census tract 2000-2018.csv")
hud_2023_hcv_ca <- read_csv("hudPicture2022_2020census_571974.csv")

```

```{r}
hud_hcv_new <- 
  hud_hcv |>
  mutate(EACODE = NULL, EANAME = NULL, Shape__Area = NULL, Shape__Length = NULL) 

hud_poverty_new <-
  hud_poverty |>
  mutate(VERSION = NULL, Shape__Area = NULL, Shape__Length = NULL)

hud_2023_hcv_ca <-
  hud_2023_hcv |>
    mutate(Name = gsub('^="(.*)"$', '\\1', Name), Code = gsub('^="(.*)"$', '\\1', Code))

```

```{r}
hud_2023_hcv_ca |>
  filter(`Average months on waiting list` > 0) |>
  ggplot(aes(x = `Average months on waiting list`)) +
  geom_histogram()

hud_2023_hcv_ca |>
  filter(`Average months on waiting list` > 0) |>
  ggplot(aes(Name, `Average months on waiting list`)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

#join 2023 CA HCV data with eviction data
hud_2023_hcv_ca <-
  hud_2023_hcv_ca |>
  mutate(cofips = as.numeric(Code))

#QUESTION: How to summarize eviction data by county? currently at census tract level. left joining does not work!!
left_join(hud_2023_hcv_ca, evict, by = "cofips")

```

```{r}
#connecting hud hcv and poverty index csvs
joint <- left_join(hud_hcv_new, hud_poverty_new, by = "GEOID")
```

```{r}
joint_filtered <- 
  joint |>
  select(GEOID, HCV_PUBLIC, HCV_PUBLIC_PCT, CATEGORY, POV_IDX, STATE_NAME, COUNTY_NAME)
```

```{r}
joint_filtered |>
  group_by(STATE_NAME) |>
  summarise(avg_poverty = mean(POV_IDX), avg_voucher_pct = mean(HCV_PUBLIC_PCT)) |>
  ggplot(aes(y = avg_poverty, x = avg_voucher_pct, color = STATE_NAME)) +
    geom_point()

```

```{r}
joint_filtered |>
    ggplot(aes(x = POV_IDX, y = HCV_PUBLIC_PCT)) +
    geom_point() +
  geom_smooth()

```

```{r}
#converting geoids to numeric to enable joining
hud_hcv_new <-
  hud_hcv_new |>
  mutate(GEOID_new = as.numeric(GEOID))


# number of renters per census tract
hud_hcv_new <-
  hud_hcv_new |>
  mutate(renter_count = trunc(HCV_PUBLIC/(HCV_PUBLIC_PCT/100)))

#create cofips column in hud_hcv_counties
hud_hcv_counties <-
  hud_hcv_new |>
  mutate(cofips = paste(STATE, COUNTY, sep = ""))

#joining HUD HCV data with all years eviction data
evict_hcv_allyears <- 
left_join(hud_hcv_new, evict, by = c("GEOID_new" = "fips"))
```

```{r}
#graph of proportion of renters receiving HCV in each state (some states missing like Idaho, North Dakota, South Dakota, double check Mississippi)
evict_hcv_allyears |>
  summarize(state_hcv_prop = sum(HCV_PUBLIC)/sum(renter_count), .by = state) |>
  ggplot(aes(x = state, y = state_hcv_prop)) +
    geom_col() +
    theme(axis.text.x = element_text(angle = 90, hjust = 1))

evict_hcv_allyears |>
  summarize(state_hcv = sum(HCV_PUBLIC), .by = state)

```


```{r}
#filtering eviction data to 2018 (most recent year available)}
evict_2018 <-
  evict|>
  filter(year == 2018)

#joining HUD HCV data with 2018 eviction data
evict_hcv_2018 <- left_join(hud_hcv_new, evict_2018, by = c("GEOID_new" = "fips"))

#converting geoids to numeric to enable joining

hud_poverty_new <-
  hud_poverty_new |>
  mutate(GEOID_new = as.numeric(GEOID))

#joining HUD Poverty Index data with 2018 eviction data

evict_poverty_2018 <- left_join(hud_poverty_new, evict_2018, by = c("GEOID_new" = "fips")) |>
  drop_na()



```

Testing scatterplots comparing poverty index with eviction filings by state (poverty index = 100 means no poverty and poverty index = 0 means high poverty & eviction filings rate is number of filings per 100 households) 

```{r}
#In Texas, how do evictions vary by the tract's poverty index level? Can remove geom_point and just see the smooth line

evict_poverty_2018 |>
  filter(STATE_NAME == "Texas") |>
  ggplot() +
    geom_point(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_smooth(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_point(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_smooth(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_point(aes(x = POV_IDX, y = judgement_rate), color = "blue") +
    geom_smooth(aes(x = POV_IDX, y = judgement_rate), color = "blue")

evict_poverty_2018 |>
  filter(STATE_NAME == "Texas") |>
  ggplot() +
    geom_smooth(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_smooth(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_smooth(aes(x = POV_IDX, y = judgement_rate), color = "blue")
```

```{r}
#In California, how do evictions vary by the tract's poverty index level? Can remove geom_point and just see the smooth line
evict_poverty_2018 |>
  filter(STATE_NAME == "California") |>
  ggplot() +
    geom_point(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_smooth(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_point(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_smooth(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_point(aes(x = POV_IDX, y = judgement_rate), color = "blue") +
    geom_smooth(aes(x = POV_IDX, y = judgement_rate), color = "blue")
```
```{r}

#In California, how do evictions vary by the tract's poverty index level? Can remove geom_point and just see the smooth line

evict |>
  filter(STATE_NAME == "California") |>
  ggplot() +
    geom_point(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_smooth(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_point(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_smooth(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_point(aes(x = POV_IDX, y = judgement_rate), color = "blue") +
    geom_smooth(aes(x = POV_IDX, y = judgement_rate), color = "blue")
```
```

```{r}
#In New Mexico, how do evictions vary by the tract's poverty index level? Can remove geom_point and just see the smooth line
evict_poverty_2018 |>
  filter(STATE_NAME == "New Mexico") |>
  ggplot() +
    geom_point(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_smooth(aes(x = POV_IDX, y = filing_rate), color = "green") +
    geom_point(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_smooth(aes(x = POV_IDX, y = threatened_rate), color = "red") +
    geom_point(aes(x = POV_IDX, y = judgement_rate), color = "blue") +
    geom_smooth(aes(x = POV_IDX, y = judgement_rate), color = "blue")
```
